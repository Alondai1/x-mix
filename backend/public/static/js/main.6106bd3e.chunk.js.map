{"version":3,"sources":["history.js","services/HttpService.js","services/UserService.js","actions/UserActions.js","cmps/Login.jsx","cmps/UserPage.jsx","pages/Home.jsx","services/boardService.js","services/SocketService.js","pages/Game.jsx","pages/About.jsx","pages/Stats.jsx","actions/SystemActions.js","pages/Multi.jsx","cmps/Iphone.jsx","App.js","serviceWorker.js","reducers/ReviewReducer.js","reducers/UserReducer.js","reducers/SystemReducer.js","reducers/index.js","store.js","index.js","assets/logo.png"],"names":["history","createBrowserHistory","axios","Axios","create","withCredentials","endpoint","data","ajax","a","async","method","url","res","console","log","dir","response","status","login","userCred","HttpService","user","_handleLogin","logout","sessionStorage","clear","signup","getUsers","filterBy","criteria","top","getById","userId","remove","update","newUser","_id","setItem","JSON","stringify","updateUser","dispatch","UserService","setUser","type","setUsers","users","mapDispatchToProps","userCreds","connect","state","loggedInUser","isLoading","system","props","React","useState","open","setOpen","msg","setMsg","email","password","loginCred","setLoginCred","username","signupCred","setSignupCred","handleModal","action","loginHandleChange","ev","target","value","name","signupHandleChange","doLogin","preventDefault","loginSection","className","onSubmit","Grid","container","spacing","alignItems","item","TextField","onChange","id","label","helperText","Button","variant","color","onClick","signupSection","Fragment","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","signupCreds","src","Logo","alt","UserPage","wins","IconButton","aria-label","length","fromNow","Divider","style","marginTop","to","fontSize","Fab","size","useEffect","createBoard","board","i","j","symbol","checkforWinningCells","posI","posJ","push","_checkRow","_checkCol","_checkDia","checkForPos","_checkComputerRowAttack","_checkComputerColAttack","_checkComputerDiaAttack","_checkComputerRowDef","_checkComputerColDef","_checkComputerDiaDef","cells","count","socket","setBoard","isWin","setIsWin","turn","setTurn","boardService","computerMove","pos","setTimeout","cell","win","winner","Date","now","loses","markCells","newBoard","forEach","map","key","cellClicked","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","setup","io","terminate","on","eventName","cb","off","emit","About","from","txt","msgs","topic","addMsg","newMsg","setState","prevState","changeTopic","SocketService","sendMsg","handleChange","msgHandleChange","this","checked","idx","Component","loadUsers","topUsers","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","lastLogin","loggedInUsers","setLoggedInUsers","gameIsOn","setGameIsOn","players","setPlayers","currentPlayer","setCurrentPlayer","socketService","addUser","emitClick","index","player","Iphone","children","App","path","Home","exact","Game","Stats","Multi","Boolean","window","location","hostname","match","initialState","reviews","selectedReview","localLoggedinUser","parse","rootReducer","combineReducers","review","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6106bd3e.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","// import history from '../history';\r\nimport Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method = 'get', data = null, dispatch) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            // diaspatch ('authorition error')\r\n        }\r\n        // diaspatch ('error')\r\n        throw err;\r\n    }\r\n}","import HttpService from './HttpService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update\r\n}\r\n\r\nfunction getUsers(filterBy) {\r\n    let criteria = '';\r\n    if (filterBy.top) criteria = `top=${filterBy.top}`\r\n    \r\n    return HttpService.get('user?' + criteria)\r\n}\r\n\r\nfunction getById(userId) {\r\n    return HttpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    return HttpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(newUser) {\r\n    const user = await HttpService.put(`user/${newUser._id}`, newUser)\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await HttpService.post('auth/login', userCred)\r\n    return _handleLogin(user)\r\n}\r\nasync function signup(userCred) {\r\n    const user = await HttpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\nasync function logout() {\r\n    await HttpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}","import UserService from '../services/UserService';\r\nimport { loading, doneLoading } from './SystemActions';\r\n\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try{\r\n      const user = await UserService.login(userCreds);\r\n      dispatch(setUser(user));\r\n    }\r\n\r\n    catch(err){\r\n      // history.push('/login');\r\n    }\r\n  };\r\n}\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    const user = await UserService.signup(userCreds);\r\n    dispatch(setUser(user));\r\n  };\r\n}\r\nexport function updateUser(newUser) {\r\n  return async dispatch => {\r\n    UserService.update(newUser);\r\n    dispatch(setUser(newUser));\r\n  };\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    await UserService.logout();\r\n    dispatch(setUser(null));\r\n  };\r\n}\r\n\r\nexport function setUser(user) {\r\n  return {\r\n    type: 'SET_USER',\r\n    user\r\n  };\r\n}\r\n\r\n\r\n\r\n// function _removeUser(userId) {\r\n//   return {\r\n//     type: 'USER_REMOVE',\r\n//     userId\r\n//   };\r\n// }\r\n\r\n\r\n\r\n// export function removeUser(userId) {\r\n//     return async dispatch => {\r\n//       try {\r\n//         await UserService.remove(userId);\r\n//         dispatch(_removeUser(userId));\r\n//       } catch (err) {\r\n//         console.log('UserActions: err in removeUser', err);\r\n//       }\r\n//     };\r\n//   }\r\n\r\n\r\n\r\n  export function loadUsers(filterBy = {}) {\r\n    return async dispatch => {\r\n      try {\r\n        dispatch(loading());\r\n        \r\n        const users = await UserService.getUsers(filterBy);\r\n        \r\n        dispatch(setUsers(users));\r\n      } catch (err) {\r\n        console.log('UserActions: err in loadUsers', err);\r\n        // example for rerouting - after changing the store\r\n      } finally {\r\n        dispatch(doneLoading());\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  function setUsers(users) {\r\n    return {\r\n      type: 'SET_USERS',\r\n      users\r\n    };\r\n  }","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { login, signup } from '../actions/UserActions';\r\nimport Logo from '../assets/logo.png'\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [msg, setMsg] = useState('')\r\n  const [loginCred, setLoginCred] = useState({ email: 'alondai1@gmail.com', password: '1' })\r\n  const [signupCred, setSignupCred] = useState({ email: '', password: '', username: '' })\r\n\r\n\r\n  const handleModal = (action) => {\r\n    setOpen(action);\r\n  };\r\n\r\n\r\n  const loginHandleChange = ev => {\r\n    console.log(ev.target.value);\r\n\r\n    const { name, value } = ev.target;\r\n    setLoginCred({ ...loginCred, [name]: value }\r\n    );\r\n  };\r\n\r\n  const signupHandleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    setSignupCred({ ...signupCred, [name]: value }\r\n    );\r\n  };\r\n\r\n  const doLogin = async (ev) => {\r\n    ev.preventDefault();\r\n    const { email, password } = loginCred;\r\n    if (!email || !password) {\r\n      return setMsg('Please enter user/password');\r\n    }\r\n    const userCreds = { email, password };\r\n    await props.login(userCreds);\r\n    if (!props.loggedInUser) {\r\n      setLoginCred({ email: '', password: '' })\r\n      setMsg('Wrong Password Or Username');\r\n    }\r\n\r\n  };\r\n\r\n  const doSignup = async (ev) => {\r\n    ev.preventDefault();\r\n    const { email, password, username } = signupCred;\r\n    if (!email || !password || !username) {\r\n      return setMsg('All inputs are required!');\r\n    }\r\n    const signupCreds = { email, password, username };\r\n    props.signup(signupCreds);\r\n    handleModal(false)\r\n    setSignupCred({ email: '', password: '', username: '' });\r\n  };\r\n\r\n\r\n  let loginSection = (\r\n\r\n    <form className=\"flex direction-column align-center\" onSubmit={doLogin}>\r\n      <div className=\"form-input\">\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <AccountCircle />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              name=\"email\"\r\n              value={loginCred.email}\r\n              onChange={loginHandleChange}\r\n\r\n              id=\"input-with-icon-grid\"\r\n              label=\"Username\"\r\n              helperText={msg}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <br />\r\n      <div className=\"form-input\">\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <LockOpenIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              name=\"password\"\r\n              value={loginCred.password}\r\n              onChange={loginHandleChange}\r\n              type=\"password\"\r\n              id=\"input-with-icon-grid\"\r\n              label=\"Password\"\r\n              helperText={msg}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={doLogin}>\r\n        Login\r\n  </Button>\r\n    </form>\r\n  );\r\n\r\n  let signupSection = (\r\n    <React.Fragment>\r\n\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={() => handleModal(true)}>\r\n        Signup\r\n  </Button>\r\n\r\n\r\n\r\n      <Dialog open={open} onClose={() => handleModal(false)} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Sign Up</DialogTitle>\r\n        <DialogContent className=\"sign-up-section\">\r\n          <DialogContentText>\r\n            Please enter A valid Username and Password.\r\n          </DialogContentText>\r\n          <form className=\"signup-form\" onSubmit={doSignup}>\r\n            <div className=\"form-input\">\r\n              <Grid container spacing={3} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    name=\"email\"\r\n                    value={signupCred.email}\r\n                    onChange={signupHandleChange}\r\n\r\n                    id=\"input-with-icon-grid\"\r\n                    label=\"Email\"\r\n                    helperText={msg}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <br />\r\n            <div className=\"form-input\">\r\n              <Grid container spacing={3} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    name=\"password\"\r\n                    value={signupCred.password}\r\n                    onChange={signupHandleChange}\r\n\r\n                    id=\"input-with-icon-grid\"\r\n                    label=\"Password\"\r\n                    helperText={msg}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <div className=\"form-input\">\r\n              <Grid container spacing={3} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    name=\"username\"\r\n                    value={signupCred.username}\r\n                    onChange={signupHandleChange}\r\n\r\n                    id=\"input-with-icon-grid\"\r\n                    label=\"Username\"\r\n                    helperText={msg}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n\r\n            <button>Signup</button>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n\r\n  );\r\n\r\n\r\n\r\n  const { loggedInUser } = props;\r\n  return (\r\n    <div className=\"login flex align-center direction-column\">\r\n      <img className=\"logo\" src={Logo} alt=\"logo\" />\r\n\r\n      <h2>{loggedInUser && loggedInUser.username}</h2>\r\n      {!loggedInUser && loginSection}\r\n      {!loggedInUser && signupSection}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.user.users,\r\n    loggedInUser: state.user.loggedInUser,\r\n    isLoading: state.system.isLoading\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  login,\r\n  signup\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment';\r\nimport Logo from '../assets/logo.png'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\n\r\nconst UserPage = ({ loggedInUser, logout }) => {\r\n\r\n    const wins = loggedInUser.wins\r\n    return (\r\n\r\n        <div className='user-page'>\r\n            <img className=\"logo\" src={Logo} alt=\"logo\" />\r\n\r\n            <IconButton className=\"logout-btn\" aria-label=\"delete\" onClick={logout}>\r\n                <ExitToAppIcon />\r\n            </IconButton>\r\n\r\n            <div className=\"user-nav\">\r\n                <p>Hello {loggedInUser.username} | </p>\r\n                {wins.length &&\r\n                    <p>\r\n                        Last Win   :\r\n                    <Moment fromNow>{wins[wins.length - 1]}</Moment>\r\n                        | </p>\r\n                }\r\n\r\n                <h2> wins: {loggedInUser.wins.length}</h2>\r\n            </div>\r\n\r\n            <Divider style={{marginTop: '22px'}} />\r\n            <div className=\"play-icons flex\">\r\n                <div>\r\n                    <h1 className=\"play-icons-text\">Multi-Player</h1>\r\n                    <Link to=\"/multi\">\r\n                        <GroupIcon style={{ fontSize: 80 }}></GroupIcon>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <h1 className=\"play-icons-text\">Single-Player</h1>\r\n                    <Link to=\"/game\">\r\n                        <PersonIcon style={{ fontSize: 80 }}></PersonIcon>\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"stats-btn\">\r\n                <Link to=\"/stats\">\r\n                    <Fab size=\"small\" color=\"secondary\" aria-label=\"add\" >\r\n                        <EqualizerIcon />\r\n                    </Fab>\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserPage\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/UserActions';\r\nimport Login from '../cmps/Login'\r\nimport UserPage from '../cmps/UserPage'\r\n\r\n// import { loadReviews, addReview } from '../actions/ReviewActions.js';\r\n// import { loadUsers } from '../actions/UserActions.js';\r\n// import { Link } from 'react-router-dom';\r\n\r\nconst Home = ({ loggedInUser, logout }) => {\r\n\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"home-page flex direction-column align-center\">\r\n      {\r\n        loggedInUser ? (<UserPage loggedInUser={loggedInUser} logout={logout}></UserPage>\r\n        ) : (<Login></Login>)\r\n      }\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedInUser: state.user.loggedInUser\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  logout\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","export default {\r\n    createBoard,\r\n    checkforWinningCells,\r\n    checkForPos\r\n}\r\n\r\n\r\nfunction createBoard() {\r\n\r\n    const board = []\r\n    for (let i = 0; i < 3; i++) {\r\n        board[i] = []\r\n        for (let j = 0; j < 3; j++) {\r\n            board[i][j] = {\r\n                symbol: '',\r\n                status: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    return board\r\n}\r\n\r\n\r\n\r\nfunction checkForPos(board) {\r\n    for (let i = 0; i < board.length; i++) {\r\n      \r\n         if (_checkComputerRowAttack(board[i]) > 1) {\r\n            for (let j = 0; j < board.length; j++) {\r\n                if (!board[i][j].symbol) return { i, j }\r\n            }\r\n        }\r\n       \r\n        else if (_checkComputerColAttack(board,i) > 1) {\r\n            for (let j = 0; j < board.length; j++) {\r\n                if (!board[j][i].symbol) return { i:j, j:i }\r\n            }\r\n        }\r\n\r\n        else if (_checkComputerDiaAttack(board,i) > 1) {\r\n            for (let j = 0; j < board.length; j++) {\r\n                if (!board[j][j].symbol) return { i:j, j }\r\n            }\r\n        }\r\n\r\n        else if (_checkComputerRowDef(board[i]) > 1) {\r\n            for (let j = 0; j < board.length; j++) {\r\n                if (!board[i][j].symbol) return { i, j }\r\n            }\r\n        }\r\n\r\n        else if (_checkComputerColDef(board,i) > 1) {\r\n            for (let j = 0; j < board.length; j++) {\r\n                if (!board[j][i].symbol) return { i:j, j:i }\r\n            }\r\n        }\r\n\r\n        else if (_checkComputerDiaDef(board,i) > 1) {\r\n            for (let j = 0; j < board.length; j++) {\r\n                if (!board[j][j].symbol) return { i:j, j }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n            \r\n        if(!board[i][j].symbol) return {i,j}\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction checkforWinningCells(board, posI, posJ, symbol) {\r\n    return _checkRow(board, posI, posJ, symbol) || _checkCol(board, posI, posJ, symbol) || _checkDia(board, posI, posJ, symbol)\r\n\r\n}\r\n\r\nfunction _checkRow(board, posI, posJ, symbol) {\r\n    const res = []\r\n    for (let j = 0; j < board[posI].length; j++) {\r\n        if (board[posI][j].symbol !== symbol) return false\r\n        else res.push({ i: posI, j })\r\n    }\r\n    if (res.length === 3) return res\r\n}\r\n\r\nfunction _checkCol(board, posI, posJ, symbol) {\r\n    const res = []\r\n    for (let i = 0; i < board.length; i++) {\r\n        if (board[i][posJ].symbol !== symbol) return false\r\n        else res.push({ i, j: posJ })\r\n    }\r\n    if (res.length === 3) return res\r\n\r\n}\r\n\r\nfunction _checkDia(board, posI, posJ, symbol) {\r\n    const res = []\r\n    for (let i = 0; i < board.length; i++) {\r\n        if (board[i][i].symbol !== symbol) return false\r\n        else res.push({ i, j: i })\r\n    }\r\n    if (res.length === 3) return res\r\n\r\n}\r\n\r\n\r\nfunction _checkComputerRowDef(cells) {\r\n    let count = 0\r\n    for (let i = 0; i < cells.length; i++) {\r\n        if (cells[i].symbol === 'X') count++\r\n\r\n    }\r\n    return count\r\n}\r\n\r\nfunction _checkComputerRowAttack(cells) {\r\n    let count = 0\r\n    for (let i = 0; i < cells.length; i++) {\r\n        if (cells[i].symbol === 'O') count++\r\n    }\r\n    return count\r\n}\r\n\r\nfunction _checkComputerColAttack(board,j) {\r\n    let count = 0\r\n    for (let i = 0; i < board.length; i++) {\r\n        if (board[i][j].symbol === 'O') count++\r\n    }\r\n    return count\r\n}\r\n\r\nfunction _checkComputerColDef(board,j) {\r\n    let count = 0\r\n    for (let i = 0; i < board.length; i++) {\r\n        if (board[i][j].symbol === 'X') count++\r\n    }\r\n    return count\r\n}\r\n\r\nfunction _checkComputerDiaAttack(board,i) {\r\n    let count = 0\r\n    for (let j = 0; j < board.length; j++) {\r\n        if (board[j][j].symbol === 'O') count++\r\n    }\r\n    return count\r\n\r\n}\r\nfunction _checkComputerDiaDef(board,i) {\r\n    let count = 0\r\n    for (let j = 0; j < board.length; j++) {\r\n        if (board[j][j].symbol === 'X') count++\r\n    }\r\n    return count\r\n\r\n}\r\n\r\n","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit,\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  \r\n  socket.emit(eventName, data);\r\n}\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { updateUser } from '../actions/UserActions'\r\nimport boardService from '../services/boardService'\r\nimport ComputerIcon from '@material-ui/icons/Computer';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\n\r\n\r\nconst Game = ({loggedInUser, updateUser}) => {\r\n    const [open, setOpen] =useState(false);\r\n    const [msg, setMsg] =useState('');\r\n    const [board, setBoard] = useState([])\r\n    const [isWin, setIsWin] = useState(false)\r\n    const [turn, setTurn] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const board = boardService.createBoard()\r\n        setBoard(board)\r\n\r\n    }, [])\r\n   \r\n\r\n    useEffect(() => {\r\n        if (turn && turn % 2 !== 0) {\r\n            computerMove()\r\n        }\r\n    }, [turn])\r\n\r\n    const cellClicked = async (i, j) => {\r\n        if (isWin || turn % 2 !== 0) return\r\n        const cell = board[i][j]\r\n        if (cell.symbol) return\r\n        cell.symbol = 'X'\r\n        setTurn(turn + 1)\r\n        win(boardService.checkforWinningCells(board, i, j, cell.symbol))\r\n    }\r\n\r\n    const computerMove = () => {\r\n        if (isWin) return\r\n\r\n        let pos = boardService.checkForPos(board)\r\n        if (!pos) {\r\n            setIsWin(true)\r\n            return console.log('tie');\r\n\r\n        }\r\n\r\n        setTimeout(() => {\r\n\r\n            const cell = board[pos.i][pos.j]\r\n            cell.symbol = 'O'\r\n            win(boardService.checkforWinningCells(board, pos.i, pos.j, cell.symbol))\r\n            setTurn(turn + 1)\r\n        }, 2000)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const win = (cells) => {\r\n        if (cells) {\r\n            const winner = turn % 2 === 0 ? loggedInUser.username : 'computer'\r\n            const user = {...loggedInUser}\r\n            if (winner === loggedInUser.username) user.wins.push(Date.now())\r\n            else user.loses.push(Date.now())\r\n            updateUser(user)\r\n            setMsg(`${winner} Wins!!`)\r\n            setOpen(true)\r\n            setIsWin(true)\r\n            markCells(cells)\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    const markCells = (cells) => {\r\n        const newBoard = [...board]\r\n        cells.forEach(cell => {\r\n            newBoard[cell.i][cell.j].status = 'marked'\r\n        });\r\n        setBoard(newBoard)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"game-page\">\r\n            <Link to=\"/\">\r\n                <h1>back</h1>\r\n            </Link>\r\n            <div className=\"game-container\">\r\n\r\n                <div className=\"players\">\r\n                    <PersonIcon style={{ fontSize: 45 }} color={turn % 2 === 0 && !isWin ? 'primary' : 'disabled'} />\r\n                    <ComputerIcon className={turn %2 !==0 && !isWin?\"animated infinite bounce\": \"\"} style={{ fontSize: 45 }} color={turn % 2 !== 0 && !isWin ? 'primary' : 'disabled'} />\r\n                </div>\r\n\r\n                {\r\n                    board.length &&\r\n                    <table>\r\n                        <tbody>\r\n                            {\r\n                                board.map((cell, i) => (\r\n                                    <tr key={i}>\r\n                                        {\r\n                                            cell.map((item, j) => (<td key={j} className={`cell ${board[i][j].status} `}\r\n                                                onClick={() => cellClicked(i, j)}>{board[i][j].symbol}</td>))\r\n                                        }\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={()=>setOpen(false)}\r\n        message={msg}\r\n       \r\n      />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      loggedInUser: state.user.loggedInUser\r\n    };\r\n  };\r\n  const mapDispatchToProps = {\r\n    \r\n    updateUser\r\n  };\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Game);","import React, { Component } from 'react';\r\nimport SocketService from '../services/SocketService';\r\nexport default class About extends Component {\r\n  state = {\r\n    msg: { from: 'Me', txt: '' },\r\n    msgs: [],\r\n    topic: 'Love'\r\n  };\r\n\r\n  componentDidMount() {\r\n    \r\n    SocketService.setup();\r\n    SocketService.emit('chat topic', this.state.topic);\r\n    SocketService.on('chat addMsg', this.addMsg);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    SocketService.off('chat addMsg', this.addMsg);\r\n    SocketService.terminate();\r\n  }\r\n\r\n  addMsg = newMsg => {\r\n    this.setState(prevState => ({ msgs: [...prevState.msgs, newMsg] }));\r\n  };\r\n\r\n  changeTopic = () => {\r\n    SocketService.emit('chat topic', this.state.topic);\r\n  };\r\n  \r\n  sendMsg = ev => {\r\n    ev.preventDefault();\r\n    SocketService.emit('chat newMsg', this.state.msg.txt);\r\n    this.setState({ msg: { from: 'Me', txt: '' } });\r\n  };\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    this.setState({ [name]: value }, () => this.changeTopic(value));\r\n  };\r\n\r\n  msgHandleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    this.setState(prevState => {\r\n      return {\r\n        msg: {\r\n          ...prevState.msg,\r\n          [name]: value\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"about\">\r\n        <h1>About Us</h1>\r\n        <p>We like You</p>\r\n        <h2>Lets Chat About {this.state.topic}</h2>\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"topic\"\r\n              value=\"Love\"\r\n              checked={this.state.topic === 'Love'}\r\n              onChange={this.handleChange}\r\n            />\r\n            Love\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"topic\"\r\n              value=\"Politics\"\r\n              checked={this.state.topic === 'Politics'}\r\n              onChange={this.handleChange}\r\n            />\r\n            Politics\r\n          </label>\r\n        </div>\r\n        <form onSubmit={this.sendMsg}>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.msg.txt}\r\n            onChange={this.msgHandleChange}\r\n            name=\"txt\"\r\n          />\r\n          <button>Send</button>\r\n        </form>\r\n        <ul>\r\n          {this.state.msgs.map((msg, idx) => (\r\n            <li key={idx}>{msg}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { loadUsers } from '../actions/UserActions'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\n\r\n\r\nconst Stats = ({ loggedInUser, loadUsers, isLoading, topUsers }) => {\r\n\r\n\r\n    useEffect(() => {\r\n        loadUsers({ top: 3 })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"stats-page\">\r\n            <Link to=\"/\">\r\n                <span>back</span>\r\n            </Link>\r\n\r\n            {\r\n                isLoading ? <div className=\"loading\">\r\n                    Loading...\r\n                </div> : null\r\n            }\r\n\r\n            <div className=\"top-players\">\r\n                <h1>Top Players</h1>\r\n                {\r\n                    topUsers.length && <TableContainer component={Paper}>\r\n                        <Table className=\"table\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>User Name</TableCell>\r\n                                    <TableCell align=\"right\">Wins</TableCell>\r\n                                    <TableCell align=\"right\">Email</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {topUsers.map(user => (\r\n                                    <TableRow key={user.id}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {user.username}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{user.wins.length}</TableCell>\r\n                                        <TableCell align=\"right\">{user.email}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                }\r\n            </div>\r\n            <div className=\"user-stats\">\r\n                <h1>{loggedInUser.username}</h1>\r\n                {\r\n                    <TableContainer component={Paper}>\r\n                        <Table className=\"table\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Last Login</TableCell>\r\n                                    <TableCell >Wins</TableCell>\r\n                                    <TableCell >Loses</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n\r\n                                <TableRow >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        <Moment fromNow>{loggedInUser.lastLogin[1]}</Moment>\r\n                                    </TableCell>\r\n                                    <TableCell >{loggedInUser.wins.length}</TableCell>\r\n                                    <TableCell >{loggedInUser.loses.length}</TableCell>\r\n                                </TableRow>\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser,\r\n        isLoading: state.system.isLoading,\r\n        topUsers: state.user.users\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n\r\n    loadUsers\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stats);\r\n","export function loading() {\r\n  return { type: 'LOADING_START' }\r\n}\r\nexport function doneLoading() {\r\n  return { type: 'LOADING_DONE' }\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport socketService from '../services/SocketService'\r\nimport { useState } from 'react';\r\nimport boardService from '../services/boardService'\r\nimport { updateUser } from '../actions/UserActions'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\n\r\n\r\n\r\nconst Multi = ({ loggedInUser, updateUser }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [msg, setMsg] = useState('');\r\n    const [loggedInUsers, setLoggedInUsers] = useState([])\r\n    const [gameIsOn, setGameIsOn] = useState(false)\r\n    const [players, setPlayers] = useState([])\r\n    const [board, setBoard] = useState(boardService.createBoard())\r\n    const [currentPlayer, setCurrentPlayer] = useState('')\r\n    const [isWin, setIsWin] = useState(false)\r\n\r\n    //didMount\r\n    useEffect(() => {\r\n\r\n        socketService.setup()\r\n        socketService.on('addUser', addUser)\r\n        socketService.on('cellClicked', async (state) => {\r\n\r\n            cellClicked(state)\r\n        }\r\n        )\r\n        socketService.on('startGame', (players) => {\r\n            setGameIsOn(true)\r\n            setPlayers(players)\r\n        }\r\n        )\r\n        socketService.emit('userConnected', loggedInUser)\r\n\r\n        return () => {\r\n            socketService.terminate()\r\n        }\r\n    }, [])\r\n\r\n    //didUpdate\r\n    useEffect(() => {\r\n        socketService.emit('userConnected', loggedInUser)\r\n    }, [loggedInUsers])\r\n    useEffect(() => {\r\n        if (players.length > 1 && !currentPlayer) setCurrentPlayer(players[0].username)\r\n    }, [players])\r\n\r\n\r\n    const addUser = (user) => {\r\n        setLoggedInUsers([...loggedInUsers, user])\r\n    }\r\n\r\n    const play = (player) => {\r\n        socketService.emit('newGame', [loggedInUser, player]);\r\n        setGameIsOn(true)\r\n    }\r\n\r\n    const emitClick = (i, j) => {\r\n        socketService.emit('onCellClicked', { pos: { i, j }, loggedInUser, currentPlayer, players })\r\n    }\r\n\r\n    const cellClicked = async (state) => {\r\n\r\n        const { loggedInUser, pos, currentPlayer, players } = state\r\n\r\n        if (loggedInUser.username !== currentPlayer || isWin) return\r\n        const cell = board[pos.i][pos.j]\r\n        if (cell.symbol) return\r\n        cell.symbol = (currentPlayer === players[0].username) ? 'X' : '0'\r\n        setCurrentPlayer(currentPlayer === players[0].username ? players[1].username : players[0].username)\r\n        win(boardService.checkforWinningCells(board, pos.i, pos.j, cell.symbol), currentPlayer)\r\n    }\r\n\r\n    const win = (cells, currentPlayer) => {\r\n        if (cells) {\r\n\r\n            const winner = currentPlayer\r\n            const user = { ...loggedInUser }\r\n            if (winner === loggedInUser.username) user.wins.push(Date.now())\r\n            else user.loses.push(Date.now())\r\n            updateUser(user)\r\n            setMsg(`${winner} Wins!!`)\r\n            setOpen(true)\r\n            setIsWin(true)\r\n            markCells(cells)\r\n        }\r\n    }\r\n\r\n    const markCells = (cells) => {\r\n        const newBoard = [...board]\r\n        cells.forEach(cell => {\r\n            newBoard[cell.i][cell.j].status = 'marked'\r\n        });\r\n        setBoard(newBoard)\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-page flex direction-column align-center multi-page\">\r\n\r\n            <Link className=\"back-btn\" to=\"/\">\r\n                <h1>back</h1>\r\n            </Link>\r\n            {\r\n                (players.length && gameIsOn) ? (<div className=\"players flex\">\r\n                    <div className=\"player\">\r\n                        <PersonIcon style={{ fontSize: 45 }} color={currentPlayer === players[0].username ? 'primary' : 'disabled'} />\r\n                        <h1>{players[0].username}</h1>\r\n                    </div>\r\n                    <div className=\"player\">\r\n                        <PersonIcon style={{ fontSize: 45 }} color={currentPlayer === players[0].username ? 'disabled' : 'primary'} />\r\n                        <h1>{players[1].username}</h1>\r\n                    </div>\r\n                </div>\r\n                ) : (null)\r\n\r\n            }\r\n\r\n            {\r\n                gameIsOn ? (\r\n                    <div className=\"game-container\">\r\n\r\n                        <table>\r\n                            <tbody>\r\n                                {\r\n                                    board.map((cell, i) => (\r\n                                        <tr key={i}>\r\n                                            {\r\n                                                cell.map((item, j) => (<td key={j} className={`cell ${board[i][j].status} `}\r\n                                                    onClick={() => emitClick(i, j)}>{board[i][j].symbol}</td>))\r\n                                            }\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                ) : (<div className=\"player-list\">\r\n                    {loggedInUsers.length ? (loggedInUsers.map((user, index) => {\r\n                        return <div className=\"player-item\" key={index} onClick={() => play(user)}>{user.username}</div>\r\n                    })) : (\r\n                            <h1>No Active Players</h1>\r\n                        )\r\n\r\n                    }\r\n                </div>)\r\n            }\r\n\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={3000}\r\n                onClose={() => setOpen(false)}\r\n                message={msg}\r\n\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n\r\n    updateUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Multi);\r\n","import React from 'react'\r\n\r\nexport default function Iphone(props) {\r\n    return (\r\n        <figure className=\"iphone\">\r\n        <div className=\"side-buttons\">\r\n          <div></div>\r\n        </div>\r\n        <div className=\"phone\">\r\n          <div className=\"top\">\r\n            <div>\r\n              <span className=\"camera\"></span>\r\n              <span className=\"speaker\"></span>\r\n            </div>\r\n          </div>\r\n  \r\n  \r\n          {props.children}\r\n  \r\n          <div className=\"bottom\">\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n  \r\n  \r\n  \r\n  \r\n      </figure>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Router, Switch, Route } from 'react-router';\nimport history from './history';\n\nimport Home from './pages/Home';\nimport Game from './pages/Game';\nimport About from './pages/About';\nimport Stats from './pages/Stats';\nimport Multi from './pages/Multi';\n\nimport Iphone from './cmps/Iphone'\n\n\n\nfunction App() {\n  \n  return (\n    <Iphone>\n\n      <div className=\"app-container\">\n        <Router history={history}>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/game\" component={Game} exact />\n            <Route path=\"/about\" component={About} exact />\n            <Route path=\"/stats\" component={Stats} exact />\n            <Route path=\"/multi\" component={Multi} exact />\n          </Switch>\n        </Router>\n      </div>\n    </Iphone>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  reviews: [],\r\n  selectedReview: null\r\n};\r\n\r\nexport default function(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_REVIEWS':\r\n      return { ...state, reviews: action.reviews };\r\n    case 'REVIEW_ADD':\r\n      return { ...state, reviews: [...state.reviews, action.review] };\r\n    case 'REVIEW_UPDATE':\r\n      return {\r\n        ...state,\r\n        reviews: state.reviews.map(review =>\r\n          review._id === action.review._id ? action.review : review\r\n        )};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","let localLoggedinUser = null;\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n};\r\n\r\nexport default function(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user };\r\n    case 'USER_REMOVE':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      };\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport ReviewReducer from './ReviewReducer'\r\nimport UserReducer from './UserReducer'\r\nimport SystemReducer from './SystemReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  system: SystemReducer,\r\n  review: ReviewReducer,\r\n  user: UserReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst Store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default Store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport './styles/styles.scss'\nimport App from './App';\nimport Iphone from './cmps/Iphone'\nimport * as serviceWorker from './serviceWorker';\n\nimport Store from './store';\n\nReactDOM.render(\n  \n  <Provider store={Store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.ba21988c.png\";"],"sourceRoot":""}